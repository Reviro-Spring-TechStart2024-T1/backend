# Generated by Django 5.0.4 on 2024-06-17 11:57

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FixedPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(message='As string enter a valid positive integer or decimal number.', regex='^(([0-9]+)|([0-9]+[.][0-9]+))$')])),
                ('currency_code', models.CharField(choices=[('AUD', 'Australian dollar'), ('BRL', 'Brazilian real'), ('CAD', 'Canadian dollar'), ('CNY', 'Chinese Renmenbi'), ('CZK', 'Czech koruna'), ('DKK', 'Danish krone'), ('EUR', 'Euro'), ('HKD', 'Hong Kong dollar'), ('HUF', 'Hungarian forint'), ('ILS', 'Israeli new shekel'), ('JPY', 'Japanese yen'), ('MYR', 'Malaysian ringgit'), ('MXN', 'Mexican peso'), ('TWD', 'New Taiwan dollar'), ('NZD', 'New Zealand dollar'), ('NOK', 'Norwegian krone'), ('PHP', 'Philippine peso'), ('PLN', 'Polish z≈Çoty'), ('GBP', 'Pound sterling'), ('SGD', 'Singapore dollar'), ('SEK', 'Swedish krona'), ('CHF', 'Swiss franc'), ('THB', 'Thai baht'), ('USD', 'United States dollar')], default='USD', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval_unit', models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'), ('YEAR', 'Year')], max_length=5)),
                ('interval_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)])),
            ],
        ),
        migrations.CreateModel(
            name='PayPalProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('create_time', models.DateTimeField()),
                ('links', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Taxes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.CharField(validators=[django.core.validators.RegexValidator(message='Please enter a valid number. This can be an integer (e.g. 0, 45) or a floating-point number (e.g. 0.6, 98.5).', regex='^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$')])),
                ('inclusive', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_bill_outstanding', models.BooleanField(default=True)),
                ('setup_fee_failure_action', models.CharField(choices=[('CONTINUE', 'Continue'), ('CANCEL', 'Cancel')], default='CANCEL', max_length=8)),
                ('payment_failure_threshold', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('setup_fee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_preferences', to='subscriptions.fixedprice')),
            ],
        ),
        migrations.CreateModel(
            name='PricingScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixed_price', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_scheme', to='subscriptions.fixedprice')),
            ],
        ),
        migrations.CreateModel(
            name='BillingCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenure_type', models.CharField(choices=[('TRIAL', 'Trial'), ('REGULAR', 'Regular')], max_length=7)),
                ('sequence', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('total_cycles', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('frequency', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='billing_cycle', to='subscriptions.frequency')),
                ('pricing_scheme', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_cycle', to='subscriptions.pricingscheme')),
            ],
        ),
        migrations.CreateModel(
            name='PayPalSubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('product_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=127)),
                ('description', models.CharField(max_length=127)),
                ('price', models.CharField(blank=True, max_length=32, null=True, validators=[django.core.validators.RegexValidator(message='As string enter a valid positive integer or decimal number.', regex='^(([0-9]+)|([0-9]+[.][0-9]+))$')])),
                ('status', models.CharField(choices=[('CREATED', 'The plan was created. You cannot create subscriptions for a plan in this state.'), ('INACTIVE', 'The plan is inactive.'), ('ACTIVE', 'The plan is active. You can only create subscriptions for a plan in this state.')], default='ACTIVE', max_length=24)),
                ('links', models.JSONField(blank=True, null=True)),
                ('billing_cycles', models.ManyToManyField(related_name='pay_pal_subscription_plan', to='subscriptions.billingcycle')),
                ('payment_preferences', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pay_pal_subscription_plan', to='subscriptions.paymentpreferences')),
                ('taxes', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pay_pal_subscription_plan', to='subscriptions.taxes')),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('APPROVAL_PENDING', 'The subscription is created but not yet approved by the buyer.'), ('APPROVED', 'The buyer has approved the subscription.'), ('ACTIVE', 'The subscription is active.'), ('SUSPENDED', 'The subscription is suspended.'), ('CANCELLED', 'The subscription is cancelled.'), ('EXPIRED', 'The subscription is expired.')], max_length=24)),
                ('status_update_time', models.CharField()),
                ('subscription_id', models.CharField(max_length=100)),
                ('plan_id', models.CharField(max_length=100)),
                ('start_time', models.CharField()),
                ('quantity', models.CharField()),
                ('subscriber_email', models.CharField()),
                ('subscriber_payer_id', models.CharField()),
                ('subscriber_given_name', models.CharField()),
                ('subscriber_surname', models.CharField()),
                ('billing_info', models.JSONField()),
                ('create_time', models.CharField()),
                ('update_time', models.CharField()),
                ('links', models.JSONField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
